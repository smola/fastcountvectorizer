name: fastcountvectorizer-ci
on:
  push:
    branches:
      - master
  pull_request: {}
jobs:
  lint-black:
    name: lint (black)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8.x'
          architecture: 'x64'
      - run: pip install black
      - run: black --check .
  lint-flake8:
    name: lint (flake8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8.x'
          architecture: 'x64'
      - run: pip install flake8 flake8-bugbear
      - run: flake8 --exclude=fastcountvectorizer/tests/test_sklearn.py
  lint-clang-format:
    name: lint (clang-format)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8.x'
          architecture: 'x64'
      - run: sudo apt-get update
      - run: sudo apt-get install -y clang-format-9
      - run: clang-format-9 --version
      - run: |
          if clang-format-9 --output-replacements-xml --style=file $(find fastcountvectorizer -name '*.cpp') $(find fastcountvectorizer -name '*.h') | grep -q '<replacement '; then 
            echo "clang-format failed"
            exit 1
          fi
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.5.x', '3.6.x', '3.7.x', '3.8.x']
    name: test (Python ${{ matrix.python-version }})
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - run: pip install tox numpy
      - run: tox
      - run: sudo snap install cmake --classic
      - run: /snap/cmake/current/bin/cmake --version
      - run: /snap/cmake/current/bin/cmake .
      - run: PATH="/snap/cmake/current/bin:$PATH" make run-tests